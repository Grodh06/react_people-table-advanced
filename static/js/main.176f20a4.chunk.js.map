{"version":3,"sources":["components/Page404/Page404.tsx","api.ts","Utils/GetCentury.ts","components/AddPerson/AddPerson.tsx","Utils/searchMagicHelper.tsx","components/Links/SearchLink.tsx","components/Filters/CenturyFilter.tsx","components/Filters/NameFilter.tsx","components/Filters/SexFilter.tsx","components/Filters/Filters.tsx","components/Loader/Loader.tsx","components/Links/SortLink.tsx","components/Links/PersonLink.tsx","components/PersonRow/PersonRow.tsx","components/Peopletable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","components/Navbar/NavBar.tsx","App.tsx","index.tsx"],"names":["Page404","className","getPeople","a","fetch","response","json","getCentury","person","Math","ceil","born","AddPerson","people","addPerson","useState","personName","setPersonName","personLastName","setPersonLastName","personSex","setPersonSex","personBorn","setPersonBorn","personDied","setPersonDied","personFather","setPersonFather","personMother","setPersonMother","submitNewPerson","name","sex","died","fatherName","motherName","father","find","mother","slug","toLowerCase","onSubmit","event","preventDefault","htmlFor","id","type","placeholder","value","onChange","target","checked","disabled","selected","filter","map","getSearchRequest","currentSearch","prevSearch","newSearch","URLSearchParams","toString","Object","entries","forEach","key","delete","Array","isArray","part","append","set","SearchLink","children","params","props","useSearchParams","searchParams","to","search","CenturyFilter","avalableCenturies","centuries","getAll","century","classNames","includes","c","length","NameFilter","setSearchParams","query","get","Sexfilter","Filters","Loader","SortLink","field","sortField","isReversed","sort","order","PersonLink","style","color","PersonRow","useParams","PeopleTable","title","PeoplePage","setPeople","setAvalableCenturies","isLoaded","setIsloaded","isAdd","setIsAdd","useEffect","then","res","prepearedPeople","parent","peopleLivedCenturies","from","Set","finally","visiblePeople","lowerQuary","join","firstPerson","secondPerson","localeCompare","reverse","prevPeople","some","prevPerson","onClick","NavBar","App","path","element","index","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.176f20a4.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Page404: React.FC = () => (\n  <div>\n    <h1 className=\"title has-text-centered is-uppercase\">\n      Page not found\n    </h1>\n  </div>\n);\n","import { Person } from './types/Person';\n/* import { ResponseError } from './types/ResponseError'; */\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const getPeople = async (): Promise<Person[]> => {\n  const response = await fetch(BASE_URL);\n\n  return response.json();\n};\n","import { Person } from '../types/Person';\n\nexport const getCentury = (person: Person) => Math.ceil(person.born / 100);\n","import React, { useState } from 'react';\nimport { Person } from '../../types/Person';\n\ntype Props = {\n  people: Person[],\n  addPerson: (value: Person) => void,\n};\n\nexport const AddPerson: React.FC<Props> = ({ people, addPerson }) => {\n  const [personName, setPersonName] = useState('');\n  const [personLastName, setPersonLastName] = useState('');\n  const [personSex, setPersonSex] = useState('m');\n\n  const [personBorn, setPersonBorn] = useState('');\n  const [personDied, setPersonDied] = useState('');\n  const [personFather, setPersonFather] = useState('');\n  const [personMother, setPersonMother] = useState('');\n\n  const ClearForm = () => {\n    setPersonName('');\n    setPersonLastName('');\n    setPersonSex('m');\n    setPersonBorn('');\n    setPersonDied('');\n    setPersonFather('');\n    setPersonMother('');\n  };\n\n  function submitNewPerson() {\n    addPerson({\n      name: personName,\n      sex: personSex,\n      born: +personBorn,\n      died: +personDied,\n      fatherName: personFather,\n      motherName: personMother,\n      father: people.find(person => person.name === personFather) || null,\n      mother: people.find(person => person.name === personMother) || null,\n      slug: `${personName.toLowerCase()}-${personLastName.toLowerCase}-${personBorn}`,\n    });\n    ClearForm();\n  }\n\n  return (\n    <div className=\"column is-one-fifths\">\n      <div className=\"panel\">\n        <p className=\"panel-heading\">\n          Add Person(no field check!)\n        </p>\n        <div className=\"panel-block\">\n          <p className=\"control\">\n            <form\n              onSubmit={event => {\n                event.preventDefault();\n                submitNewPerson();\n              }}\n            >\n              <div className=\"field\">\n                <label className=\"label\" htmlFor=\"nameField\">Name</label>\n                <div className=\"control\" id=\"nameField\">\n                  <input\n                    className=\"input\"\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    value={personName}\n                    onChange={event => setPersonName(event.target.value)}\n                  />\n                </div>\n              </div>\n              <div className=\"field\">\n                <label\n                  className=\"label\"\n                  htmlFor=\"lastNameField\"\n                >\n                  Last name\n                </label>\n                <div className=\"control\" id=\"lastNameField\">\n                  <input\n                    className=\"input\"\n                    type=\"text\"\n                    placeholder=\"Last name\"\n                    value={personLastName}\n                    onChange={event => setPersonLastName(event.target.value)}\n                  />\n                </div>\n              </div>\n\n              <div className=\"control\">\n                <label className=\"radio\">\n                  <input\n                    type=\"radio\"\n                    name=\"sex\"\n                    value=\"m\"\n                    checked={personSex === 'm'}\n                    onChange={(event) => setPersonSex(event.target.value)}\n                  />\n                  Male\n                </label>\n                <label className=\"radio\">\n                  <input\n                    type=\"radio\"\n                    name=\"sex\"\n                    value=\"f\"\n                    checked={personSex === 'f'}\n                    onChange={(event) => setPersonSex(event.target.value)}\n                  />\n                  Female\n                </label>\n              </div>\n\n              <div className=\"field\">\n                <label className=\"label\" htmlFor=\"bornField\">Born</label>\n                <div className=\"control\" id=\"bornField\">\n                  <input\n                    className=\"input\"\n                    type=\"text\"\n                    placeholder=\"Born\"\n                    value={personBorn}\n                    onChange={event => setPersonBorn(event.target.value)}\n                  />\n                </div>\n              </div>\n\n              <div className=\"field\">\n                <label\n                  className=\"label\"\n                  htmlFor=\"diedField\"\n                >\n                  Died\n                </label>\n                <div className=\"control\" id=\"diedField\">\n                  <input\n                    className=\"input\"\n                    type=\"text\"\n                    placeholder=\"Died\"\n                    disabled={personBorn === ''}\n                    value={personDied}\n                    onChange={event => setPersonDied(event.target.value)}\n                  />\n                </div>\n              </div>\n              <div className=\"field\">\n                Father\n                <div className=\"select\">\n                  <select\n                    value={personFather}\n                    onChange={event => setPersonFather(event.target.value)}\n                  >\n                    <option\n                      value=\"\"\n                      disabled\n                      selected\n                    >\n                      choose father\n                    </option>\n                    {people\n                      .filter(person => person.sex === 'm')\n                      .map((person) => {\n                        return (\n                          <option\n                            key={person.name}\n                            value={person.name}\n                          >\n                            {person.name}\n                          </option>\n                        );\n                      })}\n                  </select>\n                </div>\n              </div>\n\n              <div className=\"field\">\n                Mother\n                <div className=\"select\">\n                  <select\n                    value={personMother}\n                    onChange={event => setPersonMother(event.target.value)}\n                  >\n                    <option\n                      value=\"\"\n                      disabled\n                      selected\n                    >\n                      choose mother\n                    </option>\n                    {people\n                      .filter(person => person.sex === 'f')\n                      .map((person) => {\n                        return (\n                          <option\n                            key={person.name}\n                            value={person.name}\n                          >\n                            {person.name}\n                          </option>\n                        );\n                      })}\n                  </select>\n                </div>\n              </div>\n\n              <div className=\"field is-grouped\">\n                <div className=\"control\">\n                  <button\n                    type=\"submit\"\n                    className=\"button is-link\"\n                  >\n                    Submit\n                  </button>\n                </div>\n              </div>\n            </form>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\nexport function getSearchRequest(\n  currentSearch: URLSearchParams,\n  prevSearch: SearchParams,\n): string {\n  const newSearch = new URLSearchParams(currentSearch.toString());\n\n  Object.entries(prevSearch)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newSearch.delete(key);\n      } else if (Array.isArray(value)) {\n        newSearch.delete(key);\n        value.forEach(part => {\n          newSearch.append(key, part);\n        });\n      } else {\n        newSearch.set(key, value);\n      }\n    });\n\n  return newSearch.toString();\n}\n","import { Link, LinkProps, useSearchParams } from 'react-router-dom';\nimport { getSearchRequest, SearchParams } from '../../Utils/searchMagicHelper';\n\ntype Props = Omit<LinkProps, 'to'> & {\n  params: SearchParams,\n};\n\nexport const SearchLink: React.FC<Props> = ({\n  children,\n  params,\n  ...props\n}) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      to={{\n        search: getSearchRequest(searchParams, params),\n      }}\n      {...props}\n    >\n      {children}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { SearchLink } from '../Links/SearchLink';\n\ntype Props = {\n  avalableCenturies: Array<string>\n};\n\nexport const CenturyFilter: React.FC<Props> = ({ avalableCenturies }) => {\n  const [searchParams] = useSearchParams();\n  const centuries = searchParams.getAll('centuries');\n\n  return (\n    <>\n      {avalableCenturies.map(century => (\n        <SearchLink\n          key={century}\n          className={classNames('button', 'mr-1', {\n            'is-info': centuries.includes(century),\n          })}\n          params={{\n            centuries: centuries.includes(century)\n              ? centuries.filter(c => c !== century)\n              : [...centuries, century],\n          }}\n        >\n          {century}\n        </SearchLink>\n      ))}\n      <SearchLink\n        className={classNames('button is-info is-fullwidth', {\n          'is-outlined': centuries.length > 0,\n        })}\n        params={{ centuries: null }}\n      >\n        All\n      </SearchLink>\n    </>\n  );\n};\n","import React from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getSearchRequest } from '../../Utils/searchMagicHelper';\n\nexport const NameFilter: React.FC = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query') || '';\n\n  return (\n    <div className=\"panel-block\">\n      <p className=\"control has-icons-left\">\n        <input\n          className=\"input\"\n          type=\"text\"\n          placeholder=\"Search\"\n          value={query}\n          onChange={(event) => setSearchParams(\n            getSearchRequest(\n              searchParams,\n              { query: event.target.value || null },\n            ),\n          )}\n\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-search\" aria-hidden=\"true\" />\n        </span>\n      </p>\n    </div>\n  );\n};\n","import classNames from 'classnames';\nimport { useSearchParams } from 'react-router-dom';\nimport { SearchLink } from '../Links/SearchLink';\n\nexport const Sexfilter: React.FC = () => {\n  const [searchParams] = useSearchParams();\n  const sex = searchParams.get('sex');\n\n  return (\n    <p className=\"panel-tabs\">\n      <SearchLink\n        params={{ sex: null }}\n        className={classNames({ 'is-active': !sex })}\n      >\n        All\n      </SearchLink>\n\n      <SearchLink\n        params={{ sex: 'm' }}\n        className={classNames({ 'is-active': sex === 'm' })}\n      >\n        Male\n      </SearchLink>\n\n      <SearchLink\n        params={{ sex: 'f' }}\n        className={classNames({ 'is-active': sex === 'f' })}\n      >\n        Female\n      </SearchLink>\n    </p>\n  );\n};\n","import { Link } from 'react-router-dom';\nimport { CenturyFilter } from './CenturyFilter';\nimport { NameFilter } from './NameFilter';\nimport { Sexfilter } from './SexFilter';\n\ntype Props = {\n  avalableCenturies: string[]\n};\n\nexport const Filters: React.FC<Props> = ({ avalableCenturies }) => {\n  return (\n    <div className=\"column is-one-fifths\">\n      <div className=\"level\">\n        <div className=\"panel\">\n          <p className=\"panel-heading\">\n            Filters\n          </p>\n          <NameFilter />\n          <Sexfilter />\n          <div className=\"panel-block\">\n            <CenturyFilter avalableCenturies={avalableCenturies} />\n          </div>\n          <div className=\"panel-block\">\n            <Link\n              className=\"button is-link is-outlined is-fullwidth\"\n              to=\"/people\"\n            >\n              Reset all filters\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { useSearchParams } from 'react-router-dom';\nimport { SearchLink } from './SearchLink';\n\ntype Props = {\n  field: string\n};\n\nexport const SortLink: React.FC<Props> = ({ field }) => {\n  const [searchParams] = useSearchParams();\n  const sortField = searchParams.get('sort') || '';\n  const isReversed = searchParams.get('order') === 'desc';\n\n  const params = {\n    sort: (field === sortField && isReversed) ? null : field,\n    order: (field === sortField && !isReversed) ? 'desc' : null,\n  };\n\n  return (\n    <SearchLink params={params}>\n      <span className=\"icon\">\n        <i\n          className={classNames('fas', {\n            'fa-sort': sortField !== field,\n            'fa-sort-up': sortField === field && !isReversed,\n            'fa-sort-down': sortField === field && isReversed,\n          })}\n        />\n      </span>\n    </SearchLink>\n  );\n};\n","import { Link } from 'react-router-dom';\nimport { Person } from '../../types/Person';\n\ntype Props = {\n  person: Person\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <Link\n      to={`/people/${person.slug}`}\n      style={person.sex === 'm'\n        ? ({ color: 'rgb(0, 71, 171)' })\n        : ({ color: 'rgb(255, 0, 0)' })}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types/Person';\nimport { PersonLink } from '../Links/PersonLink';\n\ntype Props = {\n  person: Person\n};\n\nexport const PersonRow: React.FC<Props> = ({ person }) => {\n  const { slug } = useParams();\n\n  return (\n    <>\n      <tr className={classNames({ 'is-selected': slug === person.slug })}>\n        <th>\n          <PersonLink person={person} />\n        </th>\n        <th>{person.sex}</th>\n        <th>{person.born}</th>\n        <th>{person.died}</th>\n        {!person.father\n          ? (<th>{person.fatherName}</th>)\n          : (\n            <th>\n              <PersonLink person={person.father} />\n            </th>\n          )}\n        {!person.mother\n          ? (<th>{person.motherName}</th>)\n          : (\n            <th>\n              <PersonLink person={person.mother} />\n            </th>\n          )}\n      </tr>\n    </>\n\n  );\n};\n","import { Person } from '../../types/Person';\nimport { SortLink } from '../Links/SortLink';\nimport { PersonRow } from '../PersonRow/PersonRow';\n\ntype Props = {\n  people: Person[]\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  return (\n    <div className=\"column is-two-thirds\">\n      <div className=\"container\">\n        <table\n          className=\"table is-striped is-fullwidth\"\n        >\n          <thead>\n            <tr>\n              <th title=\"Name\">\n                <span className=\"is-flex is-flex-wrap-nowrap\">\n                  Name\n                  <SortLink field=\"name\" />\n                </span>\n              </th>\n              <th title=\"sex\">\n                <span className=\"is-flex is-flex-wrap-nowrap\">\n                  Sex\n                  <SortLink field=\"sex\" />\n                </span>\n              </th>\n              <th title=\"born\">\n                <span className=\"is-flex is-flex-wrap-nowrap\">\n                  Born\n                  <SortLink field=\"born\" />\n                </span>\n\n              </th>\n              <th title=\"died\">\n                <span className=\"is-flex is-flex-wrap-nowrap\">\n                  Died\n                  <SortLink field=\"died\" />\n                </span>\n\n              </th>\n              <th title=\"father\">\n                <span className=\"is-flex is-flex-wrap-nowrap\">\n                  Father\n                  <SortLink field=\"fatherName\" />\n                </span>\n\n              </th>\n              <th title=\"mother\">\n                <span className=\"is-flex is-flex-wrap-nowrap\">\n                  Mother\n                  <SortLink field=\"motherName\" />\n                </span>\n\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {people.map(person => {\n              return (\n                <PersonRow\n                  person={person}\n                  key={person.slug}\n                />\n              );\n            })}\n\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types/Person';\nimport { getCentury } from '../../Utils/GetCentury';\nimport { AddPerson } from '../AddPerson/AddPerson';\nimport { Filters } from '../Filters/Filters';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from '../Peopletable/PeopleTable';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [avalableCenturies, setAvalableCenturies] = useState<string[]>([]);\n  const [searchParams] = useSearchParams();\n  const [isLoaded, setIsloaded] = useState(false);\n  const [isAdd, setIsAdd] = useState(false);\n\n  const query = searchParams.get('query');\n  const sex = searchParams.get('sex');\n  const centuries = searchParams.getAll('centuries');\n  const sortField = searchParams.get('sort');\n  const isReversed = searchParams.get('order') === 'desc';\n\n  useEffect((() => {\n    getPeople().then(res => {\n      if (res) {\n        const prepearedPeople = res.map(person => {\n          const father = res\n            .find(parent => person.fatherName === parent.name) || null;\n\n          const mother = res\n            .find(parent => person.motherName === parent.name) || null;\n\n          return ({\n            ...person,\n            fatherName: person.fatherName || '--John Doe--',\n            motherName: person.motherName || '--Jane Doe--',\n            father,\n            mother,\n          }\n          );\n        });\n\n        const peopleLivedCenturies = Array\n          .from(new Set(prepearedPeople\n            .map(person => getCentury(person).toString()).sort()));\n\n        setAvalableCenturies(peopleLivedCenturies);\n        setPeople(prepearedPeople);\n      }\n    }).finally(() => {\n      setIsloaded(true);\n    });\n  }), []);\n\n  const addPerson = (person: Person) => {\n    setPeople(prevPeople => {\n      if (prevPeople.some(prevPerson => prevPerson.slug === person.slug)) {\n        return prevPeople;\n      }\n\n      return [...prevPeople, person];\n    });\n    setIsAdd(false);\n  };\n\n  let visiblePeople = [...people];\n\n  if (sex) {\n    visiblePeople = visiblePeople.filter(person => person.sex === sex);\n  }\n\n  if (centuries.length > 0) {\n    visiblePeople = visiblePeople\n      .filter(person => centuries.includes(getCentury(person).toString()));\n  }\n\n  if (query) {\n    const lowerQuary = query.toLowerCase();\n\n    visiblePeople = visiblePeople.filter(person => {\n      return [person.name, person.fatherName, person.motherName]\n        .join('\\n')\n        .toLowerCase()\n        .includes(lowerQuary);\n    });\n  }\n\n  if (sortField) {\n    visiblePeople.sort((firstPerson, secondPerson) => {\n      switch (sortField) {\n        case 'name':\n        case 'sex':\n        case 'fatherName':\n        case 'motherName':\n          return firstPerson[sortField].localeCompare(secondPerson[sortField]);\n\n        case 'born':\n        case 'died':\n          return firstPerson[sortField] - secondPerson[sortField];\n\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      visiblePeople.reverse();\n    }\n  }\n\n  return (\n    <div>\n      <h1 className=\"title has-text-centered\">People</h1>\n      {isLoaded\n        ? (\n          <div className=\"block\">\n            <div className=\"columns\">\n              <PeopleTable people={visiblePeople} />\n              <div>\n                <Filters avalableCenturies={avalableCenturies} />\n                {!isAdd\n                  ? (\n                    <div className=\"column is-one-fifths\">\n                      <div className=\"panel\">\n                        <div className=\"panel-block\">\n                          <button\n                            type=\"button\"\n                            className=\"button is-danger is-fullwidth\"\n                            onClick={() => setIsAdd(true)}\n                          >\n                            Add person\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  )\n                  : (\n                    <AddPerson people={people} addPerson={addPerson} />\n                  )}\n\n              </div>\n            </div>\n\n          </div>\n        )\n        : (<Loader />)}\n\n    </div>\n  );\n};\n","import { NavLink } from 'react-router-dom';\n\nexport const NavBar = () => {\n  return (\n    <nav className=\"is-flex is-justify-content-space-evenly\">\n      <NavLink to=\"/\" className=\"navbar-item\">\n        Home\n      </NavLink>\n      <NavLink to=\"people\" className=\"navbar-item\">\n        People\n      </NavLink>\n    </nav>\n  );\n};\n","import './App.scss';\nimport 'bulma/css/bulma.css';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { Page404 } from './components/Page404/Page404';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\nimport { NavBar } from './components/Navbar/NavBar';\n\nexport const App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <NavBar />\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route\n              path=\"/\"\n              element={<h1 className=\"title level-item\">Home Page</h1>}\n            />\n            <Route path=\"home\" element={<Navigate to=\"/\" />} />\n            <Route path=\"people\">\n              <Route index element={<PeoplePage />} />\n              <Route path=\":slug\" element={<PeoplePage />} />\n            </Route>\n            <Route path=\"/*\" element={<Page404 />} />\n          </Routes>\n        </div>\n      </div>\n\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\nimport '@fortawesome/free-regular-svg-icons/';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}